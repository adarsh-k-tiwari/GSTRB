# -*- coding: utf-8 -*-
"""GTSRB-Adarsh

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yorGOKNrEBH9rrCTmGcCu2UuLm55YqNr

## Personal notebook for GTSRB using pytorch

The German Traffic Sign Benchmark is a multi-class, single-image classification challenge held at the International Joint Conference on Neural Networks (IJCNN) 2011. We cordially invite researchers from relevant fields to participate: The competition is designed to allow for participation without special domain knowledge. Our benchmark has the following properties:

1. Single-image, multi-class classification problem
2. More than 40 classes
3. More than 50,000 images in total
4. Large, lifelike database
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np

import torch.nn as nn
import torch
import torch.utils.data as data
import torchvision.transforms as transforms


# root_dir = '/root/GTSRB'

# os.makedirs(root_dir, exist_ok=True)

transform = transforms.Compose([
    transforms.Resize((32, 32)),  # Resize images to 32x32 pixels
    transforms.ToTensor(),         # Convert images to PyTorch tensors
])

class GTSRBModel(nn.Module):
    def __init__(self):
        super(GTSRBModel, self).__init__()
        self.conv1 = nn.Conv2d(3, 32, kernel_size=3, stride=1, padding=1)
        self.relu1 = nn.ReLU()
        self.pool = nn.MaxPool2d(kernel_size=2, stride=2)
        self.conv2 = nn.Conv2d(32, 64, kernel_size=3, stride=1, padding=1)
        self.relu2 = nn.ReLU()
        self.fc1 = nn.Linear(64 * 8 * 8, 512)
        self.fc2 = nn.Linear(512, 43)
    def forward(self, x):
      x = self.pool(nn.functional.relu(self.conv1(x)))
      x = self.pool(nn.functional.relu(self.conv2(x)))
      x = x.view(-1, 64 * 8 * 8)
      x = nn.functional.relu(self.fc1(x))
      x = self.fc2(x)
      return x

model = GTSRBModel()
